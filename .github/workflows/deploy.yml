name: Deploy Image Application and Authorization Service

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: AWS ECR Login
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_ACCOUNT_IDS: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: Set Repository Tag Prefix
        run: |
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "REPO_PREFIX=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV;
          elif [ -n "${{ secrets.AWS_ACCOUNT_ID }}" ]; then
            echo "REPO_PREFIX=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV;
          fi

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy CloudFormation template
        id: cf_infra
        uses: aws-actions/aws-cloudformation-github-deploy@master
        with:
          name: cf_infra
          template: aws/cf_infra.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            Environment=Development

      - name: Build auth-service Docker image
        run: docker build -t auth-service ./auth

      - name: Tag and Push auth-service Docker image
        run: |
          docker tag auth-service:latest "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/auth-service:latest";
          docker push "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/auth-service:latest";

      - name: Build image-app Docker image
        run: docker build -t image-app ./image

      - name: Tag and Push image-app Docker image
        run: |
          docker tag image-app:latest "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/image-app:latest";
          docker push "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/image-app:latest";

  deploy:
    name: Deploy on Target Server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy Docker Compose file to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: docker-compose.yml
          target: /home/${{ secrets.SSH_USERNAME }}/docker-compose.yml

      - name: SSH to server and deploy with docker-compose
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/${{ secrets.SSH_USERNAME }}
            docker-compose down
            docker-compose pull
            docker-compose up -d