AWSTemplateFormatVersion: "2010-09-09"
Description: Pre-requisites for Family Photos project (IAM, VPC, Subnets, Endpoints, SSL)

Resources:

  #####################################################
  # IAM Group, User, Policy for GitHub Actions Deployments
  #####################################################

  FamilyPhotosServiceGroup:
    Type: "AWS::IAM::Group"
    Properties:
      GroupName: "FamilyPhotosServiceGroup"

  FamilyUser:
    Type: "AWS::IAM::User"
    Properties:
      UserName: "family_user"
      Tags:
        - Key: "Application"
          Value: "FamilyPhotosService"

  FamilyPhotosServiceGroupMembership:
    Type: "AWS::IAM::UserToGroupAddition"
    Properties:
      GroupName: !Ref FamilyPhotosServiceGroup
      Users:
        - !Ref FamilyUser

  GitHubActionsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "GitHubActionsPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # ECR Permissions
          - Effect: "Allow"
            Action:
              - "ecr:*"
            Resource: "*"
          # CloudFormation Permissions
          - Effect: "Allow"
            Action:
              - "cloudformation:*"
            Resource: "*"
          # ECS Permissions
          - Effect: "Allow"
            Action:
              - "ecs:*"
            Resource: "*"
          # IAM Role Access
          - Effect: "Allow"
            Action:
              - "iam:*"
            Resource: "*"
          # Logs Permissions
          - Effect: "Allow"
            Action:
              - "logs:*"
            Resource: "*"
          # ACM Permissions
          - Effect: "Allow"
            Action:
              - "acm:*"
            Resource: "*"
          # Networking Permissions
          - Effect: "Allow"
            Action:
              - "ec2:*"
              - "elasticloadbalancing:*"
            Resource: "*"
          # Cloudfront Permissions
          - Effect: "Allow"
            Action:
              - "cloudfront:*"
            Resource: "*"
          # EFS Permissions
          - Effect: "Allow"
            Action:
              - "elasticfilesystem:*"
            Resource: "*"
          # ServiceDiscovery Permissions
          - Effect: "Allow"
            Action:
              - "servicediscovery:*"
              - "route53:*"
            Resource: "*"
      Groups:
        - !Ref FamilyPhotosServiceGroup

  #####################################################
  # Networking (VPC + Public & Private Subnets)
  #####################################################

  FamilyVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: FamilyPhotosVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: FamilyPhotosIGW

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref FamilyVpc
      InternetGatewayId: !Ref InternetGateway

  # -------------------
  # Public Subnets (for ALB)
  # -------------------

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FamilyVpc
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: FamilyPhotosPublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FamilyVpc
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: FamilyPhotosPublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FamilyVpc

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # -------------------
  # Private Subnets (for ECS services)
  # -------------------

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FamilyVpc
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: FamilyPhotosPrivateSubnet1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FamilyVpc
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      Tags:
        - Key: Name
          Value: FamilyPhotosPrivateSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FamilyVpc
      Tags:
        - Key: Name
          Value: FamilyPhotosPrivateRouteTable1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FamilyVpc
      Tags:
        - Key: Name
          Value: FamilyPhotosPrivateRouteTable2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

  #####################################################
  # VPC Endpoints for Private ECS Image Pulls (ECR + S3)
  #####################################################

  DefaultSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Default SG for VPC endpoints
      VpcId: !Ref FamilyVpc
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 10.0.0.0/16

  ECRApiEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref FamilyVpc
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ecr.api"
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !Ref DefaultSecurityGroup

  ECRDockerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref FamilyVpc
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ecr.dkr"
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !Ref DefaultSecurityGroup

  S3GatewayEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref FamilyVpc
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      RouteTableIds:
        - !Ref PrivateRouteTable1
        - !Ref PrivateRouteTable2
      VpcEndpointType: Gateway

Outputs:
  IAMGroupName:
    Description: "Name of the IAM Group created"
    Value: !Ref FamilyPhotosServiceGroup
    Export:
      Name: family-photos-preapply-IAMGroupName

  IAMUserName:
    Description: "Name of the IAM User created"
    Value: !Ref FamilyUser
    Export:
      Name: family-photos-preapply-IAMUserName

  VpcId:
    Description: "ID of the created VPC"
    Value: !Ref FamilyVpc
    Export:
      Name: family-photos-preapply-VpcId

  PublicSubnet1:
    Description: "ID of Public Subnet 1"
    Value: !Ref PublicSubnet1
    Export:
      Name: family-photos-preapply-PublicSubnet1

  PublicSubnet2:
    Description: "ID of Public Subnet 2"
    Value: !Ref PublicSubnet2
    Export:
      Name: family-photos-preapply-PublicSubnet2

  PrivateSubnet1:
    Description: "ID of Private Subnet 1"
    Value: !Ref PrivateSubnet1
    Export:
      Name: family-photos-preapply-PrivateSubnet1

  PrivateSubnet2:
    Description: "ID of Private Subnet 2"
    Value: !Ref PrivateSubnet2
    Export:
      Name: family-photos-preapply-PrivateSubnet2
