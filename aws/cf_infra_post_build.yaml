AWSTemplateFormatVersion: "2010-09-09"
Description: ECS Cluster, Task Definitions, and Services (including Postgres)

Parameters:
  Environment:
    Type: String
    Default: Development
    AllowedValues:
      - Development
      - Staging
      - Production
    Description: Environment name for resource tagging

  PGUser:
    Type: String
    Description: Postgres username

  PGPassword:
    Type: String
    NoEcho: true
    Description: Postgres password

  S3BucketName:
    Type: String
    Default: photo-mordanov
    Description: S3 bucket for file manager

Resources:
  ######################################
  # ECS Cluster
  ######################################
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${Environment}-family-photos-cluster"

  ######################################
  # Auth Task Definition
  ######################################
  AuthTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: auth-service
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !ImportValue family-photos-ExecutionRoleARN
      TaskRoleArn: !ImportValue family-photos-TaskRoleARN
      ContainerDefinitions:
        - Name: auth-service
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/auth-service:latest"
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/auth-service
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: POSTGRES_HOST
              Value: postgres
            - Name: POSTGRES_USER
              Value: !Ref PGUser
            - Name: POSTGRES_PASSWORD
              Value: !Ref PGPassword
            - Name: POSTGRES_DB
              Value: auth_db

  ######################################
  # Image App Task Role
  ######################################
  ImageAppTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Environment}-image-app-task-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3AccessForImageApp
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub "arn:aws:s3:::${S3BucketName}"
                  - !Sub "arn:aws:s3:::${S3BucketName}/*"

  ######################################
  # Image App Task Definition (Streamlit S3 File Manager)
  ######################################
  ImageAppTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: image-app
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !ImportValue family-photos-ExecutionRoleARN
      TaskRoleArn: !GetAtt ImageAppTaskRole.Arn
      ContainerDefinitions:
        - Name: image-app
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/image-app:latest"
          PortMappings:
            - ContainerPort: 8501
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/image-app
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: BUCKET_NAME
              Value: !Ref S3BucketName
            - Name: AUTH_SERVICE_URL
              Value: http://auth-service:8080/api/auth/validate-token

  ######################################
  # Postgres Task Definition
  ######################################
  PostgresTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: postgres
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !ImportValue family-photos-ExecutionRoleARN
      ContainerDefinitions:
        - Name: postgres
          Image: postgres:15
          PortMappings:
            - ContainerPort: 5432
          Environment:
            - Name: POSTGRES_USER
              Value: !Ref PGUser
            - Name: POSTGRES_PASSWORD
              Value: !Ref PGPassword
            - Name: POSTGRES_DB
              Value: auth_db
          MountPoints:
            - SourceVolume: postgres-data
              ContainerPath: /var/lib/postgresql/data
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/postgres
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
      Volumes:
        - Name: postgres-data
          EFSVolumeConfiguration:
            FilesystemId: !ImportValue family-photos-PostgresEFSId

  PostgresLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/postgres
      RetentionInDays: 7

  ######################################
  # Auth ECS Service
  ######################################
  AuthService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: auth-service
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref AuthTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue: family-photos-preapply-PublicSubnet1
            - Fn::ImportValue: family-photos-preapply-PublicSubnet2
          SecurityGroups:
            - !ImportValue family-photos-ECSSecurityGroupId
      LoadBalancers:
        - TargetGroupArn: !ImportValue family-photos-AuthTargetGroupArn
          ContainerName: auth-service
          ContainerPort: 8080

  ######################################
  # Image App ECS Service
  ######################################
  ImageAppService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: image-app
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref ImageAppTaskDefinition
      HealthCheckGracePeriodSeconds: 120
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue: family-photos-preapply-PublicSubnet1
            - Fn::ImportValue: family-photos-preapply-PublicSubnet2
          SecurityGroups:
            - !ImportValue family-photos-ECSSecurityGroupId
      LoadBalancers:
        - TargetGroupArn: !ImportValue family-photos-ImageAppTargetGroupArn
          ContainerName: image-app
          ContainerPort: 8501  # Streamlit default port

  ######################################
  # Postgres ECS Service
  ######################################
  PostgresService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: postgres
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref PostgresTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue: family-photos-preapply-PublicSubnet1
            - Fn::ImportValue: family-photos-preapply-PublicSubnet2
          SecurityGroups:
            - !ImportValue family-photos-ECSSecurityGroupId
      LoadBalancers: []

Outputs:
  ECSClusterName:
    Description: ECS Cluster Name
    Value: !Ref ECSCluster

  ImageAppTaskRoleArn:
    Description: Image App ECS Task Role ARN
    Value: !GetAtt ImageAppTaskRole.Arn